{"ast":null,"code":"var _jsxFileName = \"/Users/muradgakhramanov/Desktop/MyProject/social_net/src/components/pages/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport { connect } from \"react-redux\";\nimport { addPost, getUserProfile, getUserStatus, updateStatus } from \"../../../redux/reducers/profile-reducer\";\nimport Loader from \"../../UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  useEffect(() => {\n    let userId = global.location.pathname.substr(9);\n\n    if (!userId && props.isAuth) {\n      userId = props.userId;\n    }\n\n    props.getUserProfile(userId || props.userId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isFetching ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n        profile: props.profile,\n        status: props.status,\n        updateStatus: props.updateStatus,\n        setStatus: props.setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MyPosts, {\n        store: props.store\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\n\nlet mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n    isFetching: state.profilePage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPost,\n  getUserProfile,\n  getUserStatus,\n  updateStatus\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","classes","ProfileInfo","MyPosts","connect","addPost","getUserProfile","getUserStatus","updateStatus","Loader","Profile","props","userId","global","location","pathname","substr","isAuth","isFetching","profile","status","setStatus","store","mapStateToProps","state","auth","profilePage","posts","newPostText"],"sources":["/Users/muradgakhramanov/Desktop/MyProject/social_net/src/components/pages/Profile/Profile.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport classes  from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport {connect} from \"react-redux\";\nimport {addPost, getUserProfile, getUserStatus, updateStatus} from \"../../../redux/reducers/profile-reducer\";\nimport Loader from \"../../UI/Loader/Loader\";\n\nconst Profile = (props) => {\n\n    useEffect(() => {\n        let userId = global.location.pathname.substr(9);\n        if(!userId && props.isAuth) {\n            userId = props.userId\n        }\n        props.getUserProfile(userId || props.userId );\n    }, [])\n\n    return (\n        <div>\n            {props.isFetching\n                ? <Loader/>\n                : <>\n                    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\n                                 setStatus={props.setStatus}/>\n                    <MyPosts store={props.store}/>\n                </>\n            }\n        </div>\n    );\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.userId,\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        isFetching: state.profilePage.isFetching,\n    }\n}\n\nexport default connect(mapStateToProps, {addPost, getUserProfile, getUserStatus, updateStatus})(Profile);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,EAAiBC,cAAjB,EAAiCC,aAAjC,EAAgDC,YAAhD,QAAmE,yCAAnE;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EAEvBX,SAAS,CAAC,MAAM;IACZ,IAAIY,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,CAAhC,CAAb;;IACA,IAAG,CAACJ,MAAD,IAAWD,KAAK,CAACM,MAApB,EAA4B;MACxBL,MAAM,GAAGD,KAAK,CAACC,MAAf;IACH;;IACDD,KAAK,CAACL,cAAN,CAAqBM,MAAM,IAAID,KAAK,CAACC,MAArC;EACH,CANQ,EAMN,EANM,CAAT;EAQA,oBACI;IAAA,UACKD,KAAK,CAACO,UAAN,gBACK,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADL,gBAEK;MAAA,wBACE,QAAC,WAAD;QAAa,OAAO,EAAEP,KAAK,CAACQ,OAA5B;QAAqC,MAAM,EAAER,KAAK,CAACS,MAAnD;QAA2D,YAAY,EAAET,KAAK,CAACH,YAA/E;QACa,SAAS,EAAEG,KAAK,CAACU;MAD9B;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,OAAD;QAAS,KAAK,EAAEV,KAAK,CAACW;MAAtB;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;EAHV;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAtBD;;GAAMZ,O;;KAAAA,O;;AAwBN,IAAIa,eAAe,GAAIC,KAAD,IAAW;EAC7B,OAAO;IACHZ,MAAM,EAAEY,KAAK,CAACC,IAAN,CAAWb,MADhB;IAEHO,OAAO,EAAEK,KAAK,CAACE,WAAN,CAAkBP,OAFxB;IAGHC,MAAM,EAAEI,KAAK,CAACE,WAAN,CAAkBN,MAHvB;IAIHO,KAAK,EAAEH,KAAK,CAACE,WAAN,CAAkBC,KAJtB;IAKHC,WAAW,EAAEJ,KAAK,CAACE,WAAN,CAAkBE,WAL5B;IAMHV,UAAU,EAAEM,KAAK,CAACE,WAAN,CAAkBR;EAN3B,CAAP;AAQH,CATD;;AAWA,eAAed,OAAO,CAACmB,eAAD,EAAkB;EAAClB,OAAD;EAAUC,cAAV;EAA0BC,aAA1B;EAAyCC;AAAzC,CAAlB,CAAP,CAAiFE,OAAjF,CAAf"},"metadata":{},"sourceType":"module"}